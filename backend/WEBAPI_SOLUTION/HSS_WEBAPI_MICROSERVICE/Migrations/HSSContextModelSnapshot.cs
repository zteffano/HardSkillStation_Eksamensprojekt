// <auto-generated />
using System;
using HSS_WEBAPI_MICROSERVICE.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HSS_WEBAPI_MICROSERVICE.Migrations
{
    [DbContext(typeof(HSSContext))]
    partial class HSSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("AccountTypes");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.AccountWorkshop", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("WorkshopId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<bool>("Participated")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("AccountId", "WorkshopId");

                    b.HasIndex("WorkshopId");

                    b.ToTable("AccountWorkshops");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Workshop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(510)
                        .HasColumnType("varchar(510)");

                    b.Property<int>("MicroCredentials")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TicketLink")
                        .IsRequired()
                        .HasMaxLength(510)
                        .HasColumnType("varchar(510)");

                    b.Property<string>("WorkshopLink")
                        .IsRequired()
                        .HasMaxLength(510)
                        .HasColumnType("varchar(510)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("LocationId");

                    b.ToTable("Workshops");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Account", b =>
                {
                    b.HasOne("HSS_WEBAPI_MICROSERVICE.Models.AccountType", "AccountType")
                        .WithMany("Accounts")
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.AccountWorkshop", b =>
                {
                    b.HasOne("HSS_WEBAPI_MICROSERVICE.Models.Account", "Account")
                        .WithMany("AccountWorkshops")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HSS_WEBAPI_MICROSERVICE.Models.Workshop", "Workshop")
                        .WithMany("AccountWorkshops")
                        .HasForeignKey("WorkshopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Workshop");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Company", b =>
                {
                    b.HasOne("HSS_WEBAPI_MICROSERVICE.Models.Location", "Location")
                        .WithMany("Companies")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Workshop", b =>
                {
                    b.HasOne("HSS_WEBAPI_MICROSERVICE.Models.Category", "Category")
                        .WithMany("Workshops")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HSS_WEBAPI_MICROSERVICE.Models.Company", "Company")
                        .WithMany("Workshops")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HSS_WEBAPI_MICROSERVICE.Models.Location", "Location")
                        .WithMany("Workshops")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Company");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Account", b =>
                {
                    b.Navigation("AccountWorkshops");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.AccountType", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Category", b =>
                {
                    b.Navigation("Workshops");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Company", b =>
                {
                    b.Navigation("Workshops");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Location", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Workshops");
                });

            modelBuilder.Entity("HSS_WEBAPI_MICROSERVICE.Models.Workshop", b =>
                {
                    b.Navigation("AccountWorkshops");
                });
#pragma warning restore 612, 618
        }
    }
}
